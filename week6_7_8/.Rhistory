臉部防曬,
K$cluster
) %>% as.data.frame()
colnames(ClusterResult)[ncol(ClusterResult)] <- 'Cluster'
table(ClusterResult$Cluster)
ClusterResultForPlot <- ClusterResult %>%
gather( key = Continuous_Variable,
value = Normalized_Value
- c(Cluster) )
ClusterResultForPlot$Continuous_Variable <- ClusterResultForPlot$Continuous_Variable %>% factor( levels = c('rate ','popularity ','fire ',' purchase','price'))
ggplot( data = ClusterResultForPlot) +
geom_boxplot( aes( x = Continuous_Variable,
y = Normalized_Value),
size = 0.7)
ggplot( data = ClusterResultForPlot) +
geom_boxplot( aes( x = Continuous_Variable,
y = Normalized_Value),
size = 0.7)
ClusterResultForPlot <- ClusterResult %>%
gather( key = Continuous_Variable,
value = Normalized_Value
- c(Cluster) )
ClusterResultForPlot$Continuous_Variable <- ClusterResultForPlot$Continuous_Variable %>% factor( levels = c('rate ','popularity ','fire ',' purchase','price'))
ggplot( data = ClusterResultForPlot) +
geom_boxplot( aes( x = Continuous_Variable,
y = Normalized_Value),
size = 0.7)
ClusterResultForPlot <- ClusterResult %>%
gather( key = Continuous_Variable,
value = Normalized_Value
)
ClusterResultForPlot$Continuous_Variable <- ClusterResultForPlot$Continuous_Variable %>% factor( levels = c('rate ','popularity ','fire ',' purchase','price'))
ggplot( data = ClusterResultForPlot) +
geom_boxplot( aes( x = Continuous_Variable,
y = Normalized_Value),
size = 0.7)
library(ggfortify)
install.packages("ggfortify")
library(ggfortify)
set.seed(500)
ClusterResultForPlot$Continuous_Variable <- ClusterResultForPlot$Continuous_Variable %>% factor( levels = c('rate ','popularity ','fire ',' purchase','price'))
ggplot( data = ClusterResultForPlot) +
geom_boxplot( aes( x = Continuous_Variable,
y = Normalized_Value),
size = 0.7)
library(ggfortify)
set.seed(500)
autoplot(kmeans(臉部防曬[,1:5], 3), data  = 臉部防曬)
library(tidyverse)
library(knitr)
library(readxl)
臉部防曬 <- read_excel("~/Desktop/各品項爬蟲資料/保養面膜.xlsx")
kable(臉部防曬[1:5,])
str(臉部防曬)
kable(臉部防曬[1:5, ])
臉部防曬 <- 臉部防曬[,8:12] %>%
mutate(
rate = (rate - min(rate)) / (max(rate)-min(rate)),
popularity = (popularity - min(popularity)) / (max(popularity)-min(popularity)),
fire = (fire - min(fire)) / (max(fire)-min(fire)),
purchase = (purchase - min(purchase)) / (max(purchase)-min(purchase)),
price = (price - min(price)) / (max(price)-min(price))
) %>% cbind(
臉部防曬[,c(1:7)]
)
臉部防曬 <- cbind(
臉部防曬[, -c(6:12)]
)
kable(臉部防曬[1:5,])
library(reshape2)
CorMatrix <- 臉部防曬 %>% cor() %>% melt()
kable(CorMatrix[ 1:5,])
ggplot( data = CorMatrix) +
geom_tile(aes(Var1, Var2,fill = value), colour = "white") +
scale_fill_gradient2(low = "firebrick4", high = "steelblue") +
guides(fill=guide_legend(title="Correlation")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
axis.title = element_blank())
set.seed(500)
Distance <- dist(臉部防曬, method = 'euclidean')
hclust(Distance, method = 'complete') %>% plot()
set.seed(500) # remove the random effect
K <- kmeans(臉部防曬,3)
ClusterResult <- cbind(
臉部防曬,
K$cluster
) %>% as.data.frame()
set.seed(500) # remove the random effect
K <- kmeans(臉部防曬,2)
ClusterResult <- cbind(
臉部防曬,
K$cluster
) %>% as.data.frame()
colnames(ClusterResult)[ncol(ClusterResult)] <- 'Cluster'
table(ClusterResult$Cluster)
#納入主成份分析
library(ggfortify)
set.seed(500)
#納入主成份分析
library(ggfortify)
set.seed(500)
autoplot(kmeans(臉部防曬[,1:5], 2), data  = 臉部防曬)
library(tidyverse)
library(knitr)
library(readxl)
臉部防曬 <- read_excel("~/Desktop/各品項爬蟲資料/唇膏爬蟲.xlsx")
str(臉部防曬)
kable(臉部防曬[1:5,])
臉部防曬 <- 臉部防曬[,8:12] %>%
mutate(
rate = (rate - min(rate)) / (max(rate)-min(rate)),
popularity = (popularity - min(popularity)) / (max(popularity)-min(popularity)),
fire = (fire - min(fire)) / (max(fire)-min(fire)),
purchase = (purchase - min(purchase)) / (max(purchase)-min(purchase)),
price = (price - min(price)) / (max(price)-min(price))
) %>% cbind(
臉部防曬[,c(1:7)]
)
kable(臉部防曬[1:5, ])
臉部防曬 <- cbind(
臉部防曬[, -c(6:12)]
)
kable(臉部防曬[1:5,])
library(reshape2)
CorMatrix <- 臉部防曬 %>% cor() %>% melt()
kable(CorMatrix[ 1:5,])
ggplot( data = CorMatrix) +
geom_tile(aes(Var1, Var2,fill = value), colour = "white") +
scale_fill_gradient2(low = "firebrick4", high = "steelblue") +
guides(fill=guide_legend(title="Correlation")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
axis.title = element_blank())
set.seed(500)
Distance <- dist(臉部防曬, method = 'euclidean')
hclust(Distance, method = 'complete') %>% plot()
set.seed(500) # remove the random effect
K <- kmeans(臉部防曬,2)
ClusterResult <- cbind(
臉部防曬,
K$cluster
) %>% as.data.frame()
colnames(ClusterResult)[ncol(ClusterResult)] <- 'Cluster'
table(ClusterResult$Cluster)
#納入主成份分析
library(ggfortify)
set.seed(500)
set.seed(500) # remove the random effect
K <- kmeans(臉部防曬,3)
ClusterResult <- cbind(
臉部防曬,
K$cluster
) %>% as.data.frame()
colnames(ClusterResult)[ncol(ClusterResult)] <- 'Cluster'
table(ClusterResult$Cluster)
#納入主成份分析
library(ggfortify)
set.seed(500)
autoplot(kmeans(臉部防曬[,1:5], 3), data  = 臉部防曬)
library(tidyverse)
library(knitr)
library(readxl)
唇膏爬蟲 <- read_excel("~/Desktop/各品項爬蟲資料/唇膏爬蟲.xlsx")
str(唇膏爬蟲)
kable(唇膏爬蟲[1:5,])
唇膏爬蟲 <- 唇膏爬蟲[,8:12] %>%
mutate(
rate = (rate - min(rate)) / (max(rate)-min(rate)),
popularity = (popularity - min(popularity)) / (max(popularity)-min(popularity)),
fire = (fire - min(fire)) / (max(fire)-min(fire)),
purchase = (purchase - min(purchase)) / (max(purchase)-min(purchase)),
price = (price - min(price)) / (max(price)-min(price))
) %>% cbind(
唇膏爬蟲[,c(1:7)]
)
kable(唇膏爬蟲[1:5, ])
唇膏爬蟲 <- cbind(
唇膏爬蟲[, -c(6:12)]
)
kable(唇膏爬蟲[1:5,])
library(reshape2)
CorMatrix <- 唇膏爬蟲 %>% cor() %>% melt()
kable(CorMatrix[ 1:5,])
ggplot( data = CorMatrix) +
geom_tile(aes(Var1, Var2,fill = value), colour = "white") +
scale_fill_gradient2(low = "firebrick4", high = "steelblue") +
guides(fill=guide_legend(title="Correlation")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
axis.title = element_blank())
set.seed(500)
Distance <- dist(唇膏爬蟲, method = 'euclidean')
hclust(Distance, method = 'complete') %>% plot()
set.seed(500) # remove the random effect
K <- kmeans(唇膏爬蟲,3)
ClusterResult <- cbind(
唇膏爬蟲,
K$cluster
) %>% as.data.frame()
colnames(ClusterResult)[ncol(ClusterResult)] <- 'Cluster'
table(ClusterResult$Cluster)
#納入主成份分析
library(ggfortify)
set.seed(500)
autoplot(kmeans(唇膏爬蟲[,1:5], 3), data  = 唇膏爬蟲)
library(tidyverse)
library(knitr)
library(readxl)
保養面膜 <- read_excel("~/Desktop/各品項爬蟲資料/保養面膜.xlsx")
str(保養面膜)
保養面膜 <- 保養面膜[,8:12] %>%
mutate(
rate = (rate - min(rate)) / (max(rate)-min(rate)),
popularity = (popularity - min(popularity)) / (max(popularity)-min(popularity)),
fire = (fire - min(fire)) / (max(fire)-min(fire)),
purchase = (purchase - min(purchase)) / (max(purchase)-min(purchase)),
price = (price - min(price)) / (max(price)-min(price))
) %>% cbind(
保養面膜[,c(1:7)]
)
kable(保養面膜[1:5,])
kable(保養面膜[1:5, ])
保養面膜 <- cbind(
保養面膜[, -c(6:12)]
)
kable(保養面膜[1:5,])
library(reshape2)
CorMatrix <- 保養面膜 %>% cor() %>% melt()
kable(CorMatrix[ 1:5,])
ggplot( data = CorMatrix) +
geom_tile(aes(Var1, Var2,fill = value), colour = "white") +
scale_fill_gradient2(low = "firebrick4", high = "steelblue") +
guides(fill=guide_legend(title="Correlation")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
axis.title = element_blank())
set.seed(500)
Distance <- dist(保養面膜, method = 'euclidean')
hclust(Distance, method = 'complete') %>% plot()
set.seed(500) # remove the random effect
K <- kmeans(保養面膜,2)
ClusterResult <- cbind(
保養面膜,
K$cluster
) %>% as.data.frame()
colnames(ClusterResult)[ncol(ClusterResult)] <- 'Cluster'
table(ClusterResult$Cluster)
#納入主成份分析
library(ggfortify)
set.seed(500)
autoplot(kmeans(保養面膜[,1:5], 2), data  = 保養面膜)
library(tidyverse)
library(knitr)
library(readxl)
str(臉部防曬)
臉部防曬 <- read_excel("~/Desktop/各品項爬蟲資料/睫毛爬蟲.xlsx")
kable(臉部防曬[1:5,])
臉部防曬 <- 臉部防曬[,8:12] %>%
mutate(
rate = (rate - min(rate)) / (max(rate)-min(rate)),
popularity = (popularity - min(popularity)) / (max(popularity)-min(popularity)),
fire = (fire - min(fire)) / (max(fire)-min(fire)),
purchase = (purchase - min(purchase)) / (max(purchase)-min(purchase)),
price = (price - min(price)) / (max(price)-min(price))
) %>% cbind(
臉部防曬[,c(1:7)]
)
kable(臉部防曬[1:5, ])
臉部防曬 <- cbind(
臉部防曬[, -c(6:12)]
)
kable(臉部防曬[1:5,])
library(reshape2)
CorMatrix <- 臉部防曬 %>% cor() %>% melt()
kable(CorMatrix[ 1:5,])
ggplot( data = CorMatrix) +
geom_tile(aes(Var1, Var2,fill = value), colour = "white") +
scale_fill_gradient2(low = "firebrick4", high = "steelblue") +
guides(fill=guide_legend(title="Correlation")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
axis.title = element_blank())
set.seed(500)
Distance <- dist(臉部防曬, method = 'euclidean')
hclust(Distance, method = 'complete') %>% plot()
set.seed(500) # remove the random effect
set.seed(500) # remove the random effect
K <- kmeans(臉部防曬,4)
ClusterResult <- cbind(
臉部防曬,
K$cluster
) %>% as.data.frame()
colnames(ClusterResult)[ncol(ClusterResult)] <- 'Cluster'
table(ClusterResult$Cluster)
#納入主成份分析
library(ggfortify)
set.seed(500)
autoplot(kmeans(臉部防曬[,1:5], 4), data  = 臉部防曬)
library(tidyverse)
library(knitr)
library(readxl)
睫毛爬蟲 <- read_excel("~/Desktop/各品項爬蟲資料/睫毛爬蟲.xlsx")
str(睫毛爬蟲)
kable(睫毛爬蟲[1:5,])
睫毛爬蟲 <- 睫毛爬蟲[,8:12] %>%
mutate(
rate = (rate - min(rate)) / (max(rate)-min(rate)),
popularity = (popularity - min(popularity)) / (max(popularity)-min(popularity)),
fire = (fire - min(fire)) / (max(fire)-min(fire)),
purchase = (purchase - min(purchase)) / (max(purchase)-min(purchase)),
price = (price - min(price)) / (max(price)-min(price))
) %>% cbind(
睫毛爬蟲[,c(1:7)]
)
kable(睫毛爬蟲[1:5, ])
睫毛爬蟲 <- cbind(
睫毛爬蟲[, -c(6:12)]
)
kable(睫毛爬蟲[1:5,])
library(reshape2)
CorMatrix <- 睫毛爬蟲 %>% cor() %>% melt()
kable(CorMatrix[ 1:5,])
ggplot( data = CorMatrix) +
geom_tile(aes(Var1, Var2,fill = value), colour = "white") +
scale_fill_gradient2(low = "firebrick4", high = "steelblue") +
guides(fill=guide_legend(title="Correlation")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
axis.title = element_blank())
set.seed(500)
Distance <- dist(睫毛爬蟲, method = 'euclidean')
hclust(Distance, method = 'complete') %>% plot()
set.seed(500) # remove the random effect
K <- kmeans(睫毛爬蟲,4)
ClusterResult <- cbind(
睫毛爬蟲,
K$cluster
) %>% as.data.frame()
colnames(ClusterResult)[ncol(ClusterResult)] <- 'Cluster'
table(ClusterResult$Cluster)
#納入主成份分析
library(ggfortify)
set.seed(500)
autoplot(kmeans(睫毛爬蟲[,1:5], 4), data  = 睫毛爬蟲)
library(tidyverse)
library(knitr)
library(readxl)
臉部防曬 <- read_excel("~/Desktop/各品項爬蟲資料/篩紅爬蟲.xlsx")
str(臉部防曬)
kable(臉部防曬[1:5,])
臉部防曬 <- 臉部防曬[,8:12] %>%
mutate(
rate = (rate - min(rate)) / (max(rate)-min(rate)),
popularity = (popularity - min(popularity)) / (max(popularity)-min(popularity)),
fire = (fire - min(fire)) / (max(fire)-min(fire)),
purchase = (purchase - min(purchase)) / (max(purchase)-min(purchase)),
price = (price - min(price)) / (max(price)-min(price))
) %>% cbind(
臉部防曬[,c(1:7)]
)
kable(臉部防曬[1:5, ])
臉部防曬 <- cbind(
臉部防曬[, -c(6:12)]
)
kable(臉部防曬[1:5,])
library(reshape2)
CorMatrix <- 臉部防曬 %>% cor() %>% melt()
library(tidyverse)
library(knitr)
library(readxl)
臉部防曬 <- read_excel("~/Desktop/各品項爬蟲資料/篩紅爬蟲.xlsx")
str(臉部防曬)
kable(臉部防曬[1:5,])
臉部防曬 <- 臉部防曬[,8:12] %>%
mutate(
rate = (rate - min(rate)) / (max(rate)-min(rate)),
popularity = (popularity - min(popularity)) / (max(popularity)-min(popularity)),
fire = (fire - min(fire)) / (max(fire)-min(fire)),
purchase = (purchase - min(purchase)) / (max(purchase)-min(purchase)),
price = (price - min(price)) / (max(price)-min(price))
) %>% cbind(
臉部防曬[,c(1:7)]
)
library(tidyverse)
library(knitr)
library(readxl)
臉部防曬 <- read_excel("~/Desktop/各品項爬蟲資料/篩紅爬蟲.xlsx")
str(臉部防曬)
kable(臉部防曬[1:5,])
臉部防曬 <- 臉部防曬[,8:12] %>%
mutate(
rate = (rate - min(rate)) / (max(rate)-min(rate)),
popularity = (popularity - min(popularity)) / (max(popularity)-min(popularity)),
fire = (fire - min(fire)) / (max(fire)-min(fire)),
purchase = (purchase - min(purchase)) / (max(purchase)-min(purchase)),
price = (price - min(price)) / (max(price)-min(price))
) %>% cbind(
臉部防曬[,c(1:7)]
)
kable(臉部防曬[1:5, ])
臉部防曬 <- cbind(
臉部防曬[, -c(6:12)]
)
kable(臉部防曬[1:5,])
library(reshape2)
CorMatrix <- 臉部防曬 %>% cor() %>% melt()
kable(CorMatrix[ 1:5,])
ggplot( data = CorMatrix) +
geom_tile(aes(Var1, Var2,fill = value), colour = "white") +
scale_fill_gradient2(low = "firebrick4", high = "steelblue") +
guides(fill=guide_legend(title="Correlation")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
axis.title = element_blank())
set.seed(500)
Distance <- dist(臉部防曬, method = 'euclidean')
hclust(Distance, method = 'complete') %>% plot()
set.seed(500) # remove the random effect
set.seed(500) # remove the random effect
K <- kmeans(臉部防曬,3)
ClusterResult <- cbind(
臉部防曬,
K$cluster
) %>% as.data.frame()
colnames(ClusterResult)[ncol(ClusterResult)] <- 'Cluster'
table(ClusterResult$Cluster)
#納入主成份分析
library(ggfortify)
set.seed(500)
autoplot(kmeans(臉部防曬[,1:5], 3), data  = 臉部防曬)
library(tidyverse)
library(knitr)
篩紅爬蟲 <- read_excel("~/Desktop/各品項爬蟲資料/篩紅爬蟲.xlsx")
library(readxl)
str(篩紅爬蟲)
kable(篩紅爬蟲[1:5,])
篩紅爬蟲 <- 篩紅爬蟲[,8:12] %>%
mutate(
rate = (rate - min(rate)) / (max(rate)-min(rate)),
popularity = (popularity - min(popularity)) / (max(popularity)-min(popularity)),
fire = (fire - min(fire)) / (max(fire)-min(fire)),
purchase = (purchase - min(purchase)) / (max(purchase)-min(purchase)),
price = (price - min(price)) / (max(price)-min(price))
) %>% cbind(
篩紅爬蟲[,c(1:7)]
)
kable(篩紅爬蟲[1:5, ])
kable(篩紅爬蟲[1:5,])
篩紅爬蟲<- cbind(
篩紅爬蟲[, -c(6:12)]
)
library(reshape2)
kable(CorMatrix[ 1:5,])
CorMatrix <- 篩紅爬蟲 %>% cor() %>% melt()
ggplot( data = CorMatrix) +
geom_tile(aes(Var1, Var2,fill = value), colour = "white") +
scale_fill_gradient2(low = "firebrick4", high = "steelblue") +
guides(fill=guide_legend(title="Correlation")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
axis.title = element_blank())
set.seed(500)
Distance <- dist(篩紅爬蟲, method = 'euclidean')
hclust(Distance, method = 'complete') %>% plot()
set.seed(500) # remove the random effect
K <- kmeans(篩紅爬蟲,3)
ClusterResult <- cbind(
篩紅爬蟲,
K$cluster
) %>% as.data.frame()
colnames(ClusterResult)[ncol(ClusterResult)] <- 'Cluster'
table(ClusterResult$Cluster)
#納入主成份分析
library(ggfortify)
set.seed(500)
autoplot(kmeans(篩紅爬蟲[,1:5], 3), data  = 篩紅爬蟲)
臉部防曬 <- read_excel("~/Desktop/各品項爬蟲資料/臉部防曬.xlsx")
str(臉部防曬)
kable(臉部防曬[1:5,])
臉部防曬 <- 臉部防曬[,8:12] %>%
mutate(
rate = (rate - min(rate)) / (max(rate)-min(rate)),
popularity = (popularity - min(popularity)) / (max(popularity)-min(popularity)),
fire = (fire - min(fire)) / (max(fire)-min(fire)),
purchase = (purchase - min(purchase)) / (max(purchase)-min(purchase)),
price = (price - min(price)) / (max(price)-min(price))
) %>% cbind(
臉部防曬[,c(1:7)]
)
kable(臉部防曬[1:5, ])
臉部防曬 <- cbind(
臉部防曬[, -c(6:12)]
)
kable(臉部防曬[1:5,])
library(reshape2)
CorMatrix <- 臉部防曬 %>% cor() %>% melt()
kable(CorMatrix[ 1:5,])
ggplot( data = CorMatrix) +
geom_tile(aes(Var1, Var2,fill = value), colour = "white") +
scale_fill_gradient2(low = "firebrick4", high = "steelblue") +
guides(fill=guide_legend(title="Correlation")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
axis.title = element_blank())
set.seed(500)
Distance <- dist(臉部防曬, method = 'euclidean')
hclust(Distance, method = 'complete') %>% plot()
set.seed(500) # remove the random effect
set.seed(500) # remove the random effect
K <- kmeans(臉部防曬,4)
ClusterResult <- cbind(
臉部防曬,
K$cluster
) %>% as.data.frame()
colnames(ClusterResult)[ncol(ClusterResult)] <- 'Cluster'
table(ClusterResult$Cluster)
#納入主成份分析
library(ggfortify)
set.seed(500)
autoplot(kmeans(臉部防曬[,1:5], 4), data  = 臉部防曬)
